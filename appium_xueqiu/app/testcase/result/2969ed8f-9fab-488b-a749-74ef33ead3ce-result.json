{"name": "test_case[阿里巴巴]", "status": "broken", "statusDetails": {"message": "KeyError: 'by'", "trace": "self = <testcase.test_search.TestCase object at 0x04165040>\n\n    def setup(self):\n>       self.search = App().start().main().goto_market().goto_search()\n\ntest_search.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\page\\market.py:8: in goto_search\n    self.steps(\"../data/market.yml\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium_xueqiu.app.page.market.Market object at 0x041658B0>, path = '../data/market.yml'\n\n    def steps(self, path):\n        with open(path, encoding=\"utf-8\") as f:\n            name = inspect.stack()[1].function\n            steps = yaml.safe_load(f)[name]\n        raw = json.dumps(steps)\n        for key, value in self._params.items():\n            raw = raw.replace(f'${{{key}}}', value)\n        steps = json.loads(raw)\n        for step in steps:\n            if \"action\" in step.keys():\n                action = step[\"action\"]\n                if action == \"click\":\n>                   self.find(step[\"by\"], step[\"locator\"]).click()\nE                   KeyError: 'by'\n\n..\\page\\base_page.py:56: KeyError"}, "parameters": [{"name": "name", "value": "'阿里巴巴'"}], "start": 1592557887689, "stop": 1592557887689, "uuid": "3e923f8e-0172-4c4d-a686-cd337e6b9366", "historyId": "4d9d8c6f0dbf7d5dded05f6049178f37", "testCaseId": "db9c3a001a2306c35db9df4100f25b34", "fullName": "test_search.TestCase#test_case", "labels": [{"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "TestCase"}, {"name": "host", "value": "LAPTOP-MGCADPUS"}, {"name": "thread", "value": "4380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_search"}]}